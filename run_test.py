import os
import shutil
import subprocess

# --- Configuration ---
# Set the names of your directories and files.
# These paths are relative to where the script is run.

# The directory containing the source markdown files.
source_dir = 'test1004'

# The directory where the results will be stored.
results_dir = 'test1004'

# The temporary markdown file that will be processed.
target_md = 'informal.md'

# The python script to run after copying the content.
script_to_run = 'main_v1.py'

# The names of the result files generated by main_v1.py.
temp_json_result = 'result.json'
temp_md_result = 'result_pretty.md'


# --- Main Script Logic ---

def process_markdown_files():
    """
    Finds all markdown files in the source directory and processes them one by one.
    """
    # Create the results directory if it doesn't already exist.
    # The exist_ok=True argument prevents an error if the directory is already there.
    print(f"Ensuring the result directory '{results_dir}' exists...")
    os.makedirs(results_dir, exist_ok=True)

    # Check if the source directory exists.
    if not os.path.isdir(source_dir):
        print(f"Error: Source directory '{source_dir}' not found. Please make sure it exists.")
        return

    # Get a list of all files in the source directory.
    try:
        files = os.listdir(source_dir)
    except FileNotFoundError:
        print(f"Error: Could not list files in '{source_dir}'.")
        return

    # Filter for markdown files only.
    markdown_files = [f for f in files if f.endswith('.md')]

    if not markdown_files:
        print(f"No markdown files found in '{source_dir}'.")
        return

    print(f"Found {len(markdown_files)} markdown files to process.")

    # Loop through each markdown file.
    for filename in markdown_files:
        # Get the full path of the source file.
        source_file_path = os.path.join(source_dir, filename)
        
        print(f"\n--- Processing: {filename} ---")

        # 1. Copy the content of the source markdown file to informal.md.
        try:
            with open(source_file_path, 'r', encoding='utf-8') as f_read:
                content = f_read.read()
            with open(target_md, 'w', encoding='utf-8') as f_write:
                f_write.write(content)
            print(f"Successfully copied content from '{source_file_path}' to '{target_md}'.")
        except Exception as e:
            print(f"Error copying file content: {e}")
            continue  # Skip to the next file if copying fails.

        # 2. Run the main_v1.py script.
        print(f"Running '{script_to_run}'...")
        try:
            subprocess.run(['python', script_to_run], check=True)
            print(f"'{script_to_run}' executed successfully.")
        except FileNotFoundError:
            print(f"Error: '{script_to_run}' not found. Cannot execute.")
            continue
        except subprocess.CalledProcessError as e:
            print(f"An error occurred while running '{script_to_run}'. It returned a non-zero exit code: {e.returncode}")
            continue
        except KeyboardInterrupt:
            print("\nProcess interrupted by user. Exiting.")
            break

        # 3. Copy the result files to the destination with a new name.
        # Get the base name of the file without the .md extension (e.g., 'aaa' from 'aaa.md').
        base_filename = os.path.splitext(filename)[0]

        # Define the new destination paths for the result files.
        dest_json_path = os.path.join(results_dir, f"{base_filename}_structure.json")
        dest_md_path = os.path.join(results_dir, f"{base_filename}_structure_pretty.md")

        # =========================================================================
        # MODIFICATION: Changed shutil.move to shutil.copy
        # This will COPY the file content to the new destination, leaving the
        # original file (e.g., result.json) in the root directory.
        # =========================================================================

        # Copy result.json
        if os.path.exists(temp_json_result):
            shutil.copy(temp_json_result, dest_json_path)
            print(f"Copied '{temp_json_result}' to '{dest_json_path}'.")
        else:
            print(f"Warning: '{temp_json_result}' not found. Cannot copy.")

        # Copy result_pretty.md
        if os.path.exists(temp_md_result):
            shutil.copy(temp_md_result, dest_md_path)
            print(f"Copied '{temp_md_result}' to '{dest_md_path}'.")
        else:
            print(f"Warning: '{temp_md_result}' not found. Cannot copy.")

    print("\n--- All files processed or script was interrupted. ---")


if __name__ == "__main__":
    process_markdown_files()