{
  "ProofStructure": [
    {
      "type": "Fix",
      "var_list": [
        "f",
        "a",
        "b"
      ],
      "condition": [
        "f(x) is continuous on the closed interval [a,b]"
      ]
    },
    {
      "type": "Define",
      "symbol": "M",
      "meaning": [
        "M = \\max\\{ f(x) \\mid x \\in [a,b] \\}"
      ]
    },
    {
      "type": "Define",
      "symbol": "m",
      "meaning": [
        "m = \\min\\{ f(x) \\mid x \\in [a,b] \\}"
      ]
    },
    {
      "type": "Show",
      "proposition": [
        "f takes on any value between M and m"
      ]
    },
    {
      "type": "Have",
      "proposition": [
        "There exist \\xi, \\eta \\in [a,b] such that f(\\xi) = m and f(\\eta) = M"
      ],
      "reasons": [
        "Extreme Value Theorem"
      ]
    },
    {
      "type": "Fix",
      "var_list": [
        "\\xi",
        "\\eta"
      ],
      "condition": [
        "\\xi, \\eta \\in [a,b]",
        "f(\\xi)=m",
        "f(\\eta)=M"
      ]
    },
    {
      "type": "Assume",
      "assumption": [
        "\\xi < \\eta"
      ]
    },
    {
      "type": "Fix",
      "var_list": [
        "C"
      ],
      "condition": [
        "m < C < M"
      ]
    },
    {
      "type": "Define",
      "symbol": "\\varphi",
      "meaning": [
        "\\varphi(x) = f(x) - C"
      ]
    },
    {
      "type": "Have",
      "proposition": [
        "\\varphi is continuous on [\\xi,\\eta], \\varphi(\\xi) = f(\\xi) - C < 0 and \\varphi(\\eta) = f(\\eta) - C > 0"
      ],
      "reasons": []
    },
    {
      "type": "Have",
      "proposition": [
        "There exists \\zeta \\in (\\xi,\\eta) such that \\varphi(\\zeta) = 0"
      ],
      "reasons": [
        "Intermediate Value Theorem"
      ]
    },
    {
      "type": "Fix",
      "var_list": [
        "\\zeta"
      ],
      "condition": [
        "\\zeta \\in (\\xi,\\eta)",
        "\\varphi(\\zeta) = 0"
      ]
    },
    {
      "type": "Have",
      "proposition": [
        "f(\\zeta) = C"
      ],
      "reasons": []
    }
  ]
}